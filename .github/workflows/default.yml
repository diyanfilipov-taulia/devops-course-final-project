# This is a basic workflow to help you get started with Actions

name: CI workflow

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches:
      - better-docker-image-versioning

      # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-project:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        distribution: 'adopt'
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Run unit and integration tests
      run: ./gradlew check
  SAST:
    needs: test-project
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Execute Jacoco Report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube
  security:
    needs: test-project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk11@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: "--severity-threshold=critical --sarif-file-output=snyk.sarif"
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
  docker-image-scan:
    needs: [SAST, security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set GitHub Revision
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      - name: Print GitHub Revision
        run: echo $GITHUB_SHA_SHORT
      - name: Build a Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/devops-final-project:${{ env.IMAGE_TAG }} . \

          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/devops-final-project:${{ env.IMAGE_TAG }} ${{ secrets.DOCKERHUB_USERNAME }}/devops-final-project:latest
      - name: Security scan on docker image
        uses: snyk/actions/docker@master
        id: docker-image-scan
        continue-on-error: true
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/devops-final-project
          args: --file=Dockerfile
            --severity-threshold=critical
            --sarif-file-output=docker.snyk.sarif
          sarif: false
      - name: Upload sarif file to Github Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: docker.snyk.sarif
      - name: Check docker image scan status
        if: ${{ steps.docker-image-scan.outcome == 'failure' }}
        run: exit 1
#      - name: Publish docker image
#        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
#        run: docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/devops-final-project

